{
	"info": {
		"_postman_id": "781d6841-11a8-43c4-9d68-a2104afc00c0",
		"name": "koa-server-auth",
		"description": "Check JWT send and recieve by server, check statuses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Registration",
			"item": [
				{
					"name": "Register random",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2d1c3abd-28ae-4641-9f66-67ff36bb8ed1",
								"exec": [
									"pm.environment.set(\"$randomPassword\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "291e9136-521a-463e-b327-a5fbf2d80fc6",
								"exec": [
									"// Parsing the response returned by the request.",
									"var jsonData = pm.response.json();",
									"",
									"// Extracting the token from the response and setting it as a global variable.",
									"pm.globals.set(\"jwt\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{$randomEmail}}\",\n\t\"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Correct credentials"
					},
					"response": []
				},
				{
					"name": "/status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34af8e85-330d-4c43-ab8c-175512384471",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfull login\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"logged in\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followAuthorizationHeader": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Incorret JWT",
			"item": [
				{
					"name": "Wrong JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab9e60a6-50a5-4322-84ab-769bad52e216",
								"exec": [
									"pm.test(\"Intruded JWT detect\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unexpected token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIU4a5NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNlcmdleSIsImlhdCI6MTU4NTkyMjc4NywiZXhwIjoxnTg1OTIyODQ3fQ.zlPXpXvj1wJHQLhURJrJYfilTrR1FVAYLGDHWbQp-0E",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Expired JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "240138b6-f7f5-4907-8031-611c776e5096",
								"exec": [
									"pm.test(\"Expired JWT check\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"expired\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkhpbGRhOTJAZ21haWwuY29tIiwiaWF0IjoxNTkyMjkyNTM0LCJleHAiOjE1OTIyOTI1OTR9.J8HkieScKVXOcI0wC2ZOXhdwOFNjV7aWwNlnpeleiPcRpQ_fcnZ0crS-jRjpeVTK5qQPNVWurnvJCUseEl2c2w",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Incorrect credentials",
			"item": [
				{
					"name": "Incorrect password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "453709ee-d525-4e86-8e9d-6c28127c6808",
								"exec": [
									"pm.test(\"Incorrect password\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Incorrect login or password\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"sergey\",\n\t\"password\": \"password1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Without JWT"
					},
					"response": []
				},
				{
					"name": "Incorrect email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fdf29eb-fdc8-4d04-bec0-2c1e2d312dc2",
								"exec": [
									"pm.test(\"Incorrect email\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Incorrect login or password\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"sergey161681\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Without JWT"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Incorrect registration",
			"item": [
				{
					"name": "Register bad",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bf5b344f-d0ce-4294-82fb-6b96186aed46",
								"exec": [
									"pm.environment.set(\"$randomPassword\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d6883931-8dab-4883-bfac-05c8d6293301",
								"exec": [
									"// Parsing the response returned by the request.",
									"var jsonData = pm.response.json();",
									"",
									"// Extracting the token from the response and setting it as a global variable.",
									"pm.globals.set(\"jwt\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{$randomEmail}}\",\n\t\"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Correct credentials"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Caching check",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad0cd044-b0c8-4c76-bd74-11fdd7a7b60a",
								"exec": [
									"pm.environment.set(\"ETag\", pm.response.headers.get(\"ETag\").replace(/\"/g, '|'));",
									"",
									"console.log(pm.environment.get(\"ETag\"));",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ETag is present\", function () {",
									"    pm.response.to.have.header(\"ETag\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69710485-3a80-4c1d-90ad-3f2281181e42",
								"exec": [
									"console.log(pm.environment.get(\"ETag\"));",
									"",
									"pm.test(\"Status code is 304\", function () {",
									"    pm.response.to.have.status(304);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "98fff4d7-1a52-4cbd-91f6-02e31d275d16",
								"exec": [
									"pm.environment.set(\"ETag\", pm.environment.get(\"ETag\").replace(/[|]/g, '\"'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "If-None-Match",
								"value": "{{ETag}}",
								"type": "text"
							},
							{
								"key": "Cache-Control",
								"value": "must-revalidate",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "/auth/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9407e5a7-733b-44f9-94ad-f535054a1c7b",
						"exec": [
							"// Parsing the response returned by the request.",
							"var jsonData = pm.response.json();",
							"",
							"// Extracting the token from the response and setting it as a global variable.",
							"pm.globals.set(\"jwt\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"sergey\",\n\t\"password\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"login"
					]
				},
				"description": "Without JWT"
			},
			"response": []
		},
		{
			"name": "/status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1616ef15-ca3e-4ba0-b2f5-780c538cb428",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successfull login\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"logged in\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followAuthorizationHeader": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/status",
					"host": [
						"{{url}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c6eddf4f-c9fe-4ad8-9e46-45024f5c52d1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "be6526a1-c817-4f5f-b249-a8f31621674f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "6bc60238-2cb4-48fb-8f77-3eda6a02197c",
			"key": "url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}